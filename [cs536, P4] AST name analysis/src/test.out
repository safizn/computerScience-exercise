int x;
bool y;
struct S1{
    int x;
    bool y;
};

struct S2{
    int x;
    bool y;
    struct S1 s;
};

void f1(int x, bool y) {
}

int f2() {
    int x;
    bool y;
    struct S1 s;
}

void f3(int x1, bool y1) {
    int x2;
    bool y2;
    struct S1 s;
}

void f4() {
    int e;
    int x;
    bool y;
    struct S1 s1;
    struct S2 s2;
    f4(->void)(x(int), y(bool), s1(S1), s2(S2), s1(S1).x(int), s1(S1).y(bool), s2(S2).x(int), s2(S2).y(bool), s2(S2).s(S1), (s2(S2).s(S1)).x(int), (s2(S2).s(S1)).y(bool));
    f1(int,bool->void)(f2(->int)(f3(int,bool->void)()));
    x(int) = y(bool);
    x(int) = x(int);
    x(int) = s1(S1).x(int);
    s1(S1).x(int) = x(int);
    x(int) = y(bool);
    x(int)++;
    y(bool)--;
    cin >> y(bool);
    cout << y(bool);
    x(int) = (y(bool) == 1);
    s2(S2).x(int) = x(int);
    s2(S2).y(bool) = y(bool);
    (s2(S2).s(S1)).x(int) = (s2(S2).s(S1)).y(bool);
    f1(int,bool->void)((x(int) + (s1(S1).y(bool) * 2)), s2(S2));
    f2(->int)();
    f4(->void)();
    f1(int,bool->void)((x(int) + y(bool)), (x(int) - y(bool)), (x(int) * y(bool)), (x(int) / y(bool)), (!x(int)), (x(int) && y(bool)), (x(int) || y(bool)), (x(int) == y(bool)), (x(int) != y(bool)), (x(int) < y(bool)), (x(int) > y(bool)), (x(int) <= y(bool)), (x(int) >= y(bool)), (-x(int)), 123, "abc", true, false, x(int), f1(int,bool->void)());
    if (e(int)) {
        int x2;
        bool y2;
        struct S1 s;
        if (e(int)) {
            int x2;
            bool y2;
            struct S1 s;
            while (e(int)) {
                int x2;
                bool y2;
                struct S1 s;
                repeat (e(int)) {
                    int x2;
                    bool y2;
                    struct S1 s;
                }
            }
        }
    }
    else {
        int x2;
        bool y2;
        struct S1 s;
    }
    return x(int);
    return;
}

bool c;
struct S{
    int c;
};

void main(int x, int y) {
    struct S s;
    c(bool) = s(S).c(int);
    x(int)++;
    c(bool) = (s(S).c(int) = ((x(int) > y(int)) || (main(int,int->void)(x(int), y(int)) + 0)));
    if (((!c(bool)) && ((c(bool) * c(bool)) == (c(bool) / (-c(bool)))))) {
        bool z;
        repeat ((z(bool) = (0 && (z(bool) != 3)))) {
            cin >> s(S).c(int);
            z(bool)--;
        }
    }
    if ((x(int) = 2)) {
        return x(int);
    }
    else {
        return;
    }
}

